name: Docker CI/CD Pipeline

on:
  pull_request:
    branches:
      - main  # Trigger on PRs to this branch
      - staging  # Trigger on PRs to this branch
  push:
    branches:
      - dev   # Trigger on push to this branch

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        environment: [dev, staging, main]  # Defines the 3 environments

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Configure AWS credentials for the environment dynamically
      - name: Configure AWS credentials for ${{ matrix.environment }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets['AWS_ACCESS_KEY_ID_' + matrix.environment | upper] }}
          aws-secret-access-key: ${{ secrets['AWS_SECRET_ACCESS_KEY_' + matrix.environment | upper] }}

      # Log in to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Set short git commit SHA for unique image versioning
      - name: Set short git commit SHA
        id: short-sha
        run: |
          shortSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$shortSha" >> $GITHUB_ENV

      # Build, tag, and push Docker image to Amazon ECR for the respective environment
      - name: Build, tag, and push Docker image to Amazon ECR for ${{ matrix.environment }} environment
        env:
          REGISTRY: 116981805219.dkr.ecr.us-east-1.amazonaws.com
          REPOSITORY: my-capstone-ecr2
          IMAGE_TAG: ${{ env.COMMIT_SHORT_SHA }}-${{ matrix.environment }} # Tag with environment-specific tag
        run: |
          # Build Docker image
          docker build -t github-actions-repo .

          # Tag Docker image with commit SHA and environment tag
          docker tag github-actions-repo:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG
          
          # Conditionally tag with 'latest' for the main branch only
          if [[ "${{ matrix.environment }}" == "main" ]]; then
            docker tag github-actions-repo:latest $REGISTRY/$REPOSITORY:latest
          fi

          # Push the image to ECR with all tags
          docker push --all-tags $REGISTRY/$REPOSITORY
